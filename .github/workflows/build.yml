name: Build and Test

on:
  push:
    branches:
      - master
      - branch-4.15.0
    paths-ignore:
      - '**.md'

jobs:
  build:
    name: Build & Test (Java ${{ matrix.java }} ${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        java: [ 11 ]
        exclude:
          # exclude non-java 8 on macos and windows builds
          - os: macos-latest
            java: 11
          - os: windows-2019
            java: 11
          - os: macos-latest
            java: 17
          - os: windows-2019
            java: 17
          - os: macos-latest
            java: 18
          - os: windows-2019
            java: 18
    runs-on: ${{ matrix.os }}
    env:
      OS_TYPE: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.after}}
      - name: Built Code Cache
        if: ${{ matrix.java == 8}}
        uses: actions/cache@v3.0.5
        with:
          key: built-code-${{ github.run_number }}-${{ github.run_attempt }}
          path: ./**/target
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build & Test
        run: |
          mvn -B "-DtrimStackTrace=false" -pl '!liquibase-dist' clean test package surefire-report:report
      - name: Remove Original Jars for *nix
        if: env.OS_TYPE != 'windows-2019'
        run: |
          find . -name original-*.jar -exec rm {} \;


      - name: Archive Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: liquibase-test-results-jdk${{ matrix.java }}
          path: |
            ./**/target/surefire-reports
            ./**/target/site

      - name: Archive Modules
        if: ${{ matrix.java == 8 && matrix.os == 'ubuntu-latest'}}
        uses: actions/upload-artifact@v3
        with:
          name: liquibase-modules
          path: |
            */target/*-0-SNAPSHOT.jar

  sonar:
    name: Sonar Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          ref: ${{ github.event.pull_request.head.sha || github.event.after}}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3.0.5
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean verify sonar:sonar -P sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=WojtekMs_liquibase
